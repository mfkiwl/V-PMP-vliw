 library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

--  +------------------------+----------------+--------+--------+--------+
--  |immediate               |offset          |src     |dst     |opcode  |
--  +------------------------+----------------+--------+--------+--------+
--   63                    32 31            16 15    12 11     8 7       0

package common_pkg is

  -- Group class of opcodes

  constant R_TYPE : std_logic_vector(5 downto 0) := "00----";
  constant I_TYPE_1 : std_logic_vector(5 downto 0) := "01----";
  constant I_TYPE_2 : std_logic_vector(5 downto 0) := "10----";
  constant J_TYPE : std_logic_vector(5 downto 0) := "11----";

  -- ALU-64 OPCODES

  constant ADDI_OPC  : std_logic_vector(7 downto 0) := "00000111";
  constant ADD_OPC   : std_logic_vector(7 downto 0) := "00001111";
  constant SUBI_OPC  : std_logic_vector(7 downto 0) := "00010111";
  constant SUB_OPC   : std_logic_vector(7 downto 0) := "00011111";
  constant MULI_OPC  : std_logic_vector(7 downto 0) := "00100111";
  constant MUL_OPC   : std_logic_vector(7 downto 0) := "00101111";
  constant DIVI_OPC  : std_logic_vector(7 downto 0) := "00110111";
  constant DIV_OPC   : std_logic_vector(7 downto 0) := "00111111";
  constant ORI_OPC   : std_logic_vector(7 downto 0) := "01000111";
  constant OR_OPC    : std_logic_vector(7 downto 0) := "01001111";
  constant ANDI_OPC  : std_logic_vector(7 downto 0) := "01010111";
  constant AND_OPC   : std_logic_vector(7 downto 0) := "01011111";
  constant LSHI_OPC  : std_logic_vector(7 downto 0) := "01100111";
  constant LSH_OPC   : std_logic_vector(7 downto 0) := "01101111";
  constant RSHI_OPC  : std_logic_vector(7 downto 0) := "01110111";
  constant RSH_OPC   : std_logic_vector(7 downto 0) := "01111111";
  constant NEG_OPC   : std_logic_vector(7 downto 0) := "10000111";
  constant MODI_OPC  : std_logic_vector(7 downto 0) := "10010111";
  constant MOD_OPC   : std_logic_vector(7 downto 0) := "10011111";
  constant XORI_OPC  : std_logic_vector(7 downto 0) := "10100111";
  constant XOR_OPC   : std_logic_vector(7 downto 0) := "10101111";
  constant MOVI_OPC  : std_logic_vector(7 downto 0) := "10110111";
  constant MOV_OPC   : std_logic_vector(7 downto 0) := "10111111";
  constant ARSHI_OPC : std_logic_vector(7 downto 0) := "11000111";
  constant ARSH_OPC  : std_logic_vector(7 downto 0) := "11001111";

  -- ALU-32 OPCODES

  constant ADDI32_OPC  : std_logic_vector(7 downto 0) := "00000100";
  constant ADD32_OPC   : std_logic_vector(7 downto 0) := "00001100";
  constant SUBI32_OPC  : std_logic_vector(7 downto 0) := "00010100";
  constant SUB32_OPC   : std_logic_vector(7 downto 0) := "00011100";
  constant MULI32_OPC  : std_logic_vector(7 downto 0) := "00100100";
  constant MUL32_OPC   : std_logic_vector(7 downto 0) := "00101100";
  constant DIVI32_OPC  : std_logic_vector(7 downto 0) := "00110100";
  constant DIV32_OPC   : std_logic_vector(7 downto 0) := "00111100";
  constant ORI32_OPC   : std_logic_vector(7 downto 0) := "01000100";
  constant OR32_OPC    : std_logic_vector(7 downto 0) := "01001100";
  constant ANDI32_OPC  : std_logic_vector(7 downto 0) := "01010100";
  constant AND32_OPC   : std_logic_vector(7 downto 0) := "01011100";
  constant LSHI32_OPC  : std_logic_vector(7 downto 0) := "01100100";
  constant LSH32_OPC   : std_logic_vector(7 downto 0) := "01101100";
  constant RSHI32_OPC  : std_logic_vector(7 downto 0) := "01110100";
  constant RSH32_OPC   : std_logic_vector(7 downto 0) := "01111100";
  constant NEG32_OPC   : std_logic_vector(7 downto 0) := "10000100";
  constant MODI32_OPC  : std_logic_vector(7 downto 0) := "10010100";
  constant MOD32_OPC   : std_logic_vector(7 downto 0) := "10011100";
  constant XORI32_OPC  : std_logic_vector(7 downto 0) := "10100100";
  constant XOR32_OPC   : std_logic_vector(7 downto 0) := "10101100";
  constant MOVI32_OPC  : std_logic_vector(7 downto 0) := "10110100";
  constant MOV32_OPC   : std_logic_vector(7 downto 0) := "10111100";
  constant ARSHI32_OPC : std_logic_vector(7 downto 0) := "11000100";
  constant ARSH32_OPC  : std_logic_vector(7 downto 0) := "11001100";

  -- J_TYPE OPCODES

  constant BRT_OPC  : std_logic_vector(5 downto 0) := "110000";  -- branch on true condition
  constant BRF_OPC  : std_logic_vector(5 downto 0) := "110001";  -- branch on false condition
  constant JMP_OPC  : std_logic_vector(5 downto 0) := "110010";  -- goto

  -- MISC
  
  
  
end common_pkg;

